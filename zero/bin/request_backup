#!/usr/bin/python

SOCKET_PATH="/run/plexus.sock"

import sys
import Pyro4
import time
import random # we're not using this for security, so its fine

if __name__ == "__main__":

	if len(sys.argv) != 2:
		sys.stderr.write("Invalid number of arguments\n")
		sys.exit(1)

	plexus = Pyro4.Proxy('PYRO:plexus@./u:' + SOCKET_PATH)
	plexus._pyroTimeout = 5

	try:
		task_id = plexus.request_backup(sys.argv[1])
	except Exception as ex:
		sys.stderr.write("An error occured whilst requesting a backup: %s - %s\n" % (str(type(ex)),str(ex)))
		sys.exit(100)

	waiting_for_backup = True

	while waiting_for_backup:
		try:
			if plexus.is_backup_running(task_id):
				time.sleep(10 + random.randint(1,10))
			else:
				waiting_for_backup = False
		except Exception as ex:
			sys.stderr.write("An error occured whilst waiting for the backup to complete: %s - %s\n" % (str(type(ex)),str(ex)))
			sys.exit(101)

	try:
		status = plexus.get_task_status(task_id)
	except Exception as ex:
		sys.stderr.write("An error occured whilst determining the result of the backup: %s - %s\n" % (str(type(ex)),str(ex)))
		sys.exit(102)

	## exit with the task status code as teh return code
	# 0 = success
	# 1 = partial transfer
	# 2 = failed, rsync command failed
	# 3 = failed, python exception
	sys.exit(status)
